"use strict";(self.webpackChunkakasha_docs=self.webpackChunkakasha_docs||[]).push([[49153],{35228:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>d});var t=n(74848),l=n(28453);const i={},o=void 0,r={id:"design-system/design-system-core/Pill",title:"Pill",description:"Components",source:"@site/docs/design-system/design-system-core/Pill.md",sourceDirName:"design-system/design-system-core",slug:"/design-system/design-system-core/Pill",permalink:"/design-system/design-system-core/Pill",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Pagination.page-bubble",permalink:"/design-system/design-system-core/Pagination.page-bubble"},next:{title:"ProfileAvatarButton.ProfileAvatarLoading",permalink:"/design-system/design-system-core/ProfileAvatarButton.ProfileAvatarLoading"}},c={},d=[{value:"Components",id:"components",level:2},{value:"Pill()",id:"pill",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Example",id:"example",level:4},{value:"Source",id:"source",level:4},{value:"Props",id:"props",level:2},{value:"PillProps",id:"pillprops",level:3},{value:"Source",id:"source-1",level:4}];function a(e){const s={a:"a",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h2,{id:"components",children:"Components"}),"\n",(0,t.jsx)(s.h3,{id:"pill",children:"Pill()"}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Pill"}),"(",(0,t.jsx)(s.code,{children:"props"}),", ",(0,t.jsx)(s.code,{children:"context"}),"?): ",(0,t.jsx)(s.code,{children:"ReactNode"})]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"A Pill component is an UI element that takes the shape of a capsule/pill. It is often used\nto display compact information such as tags, labels, or counters. In Akasha's design system,\nPills have two types: action pills and info pills. The main difference between the two is that\ninfo pills are informative only and action pills allow users to take action.\nAction Pills take most of the Button component's props as they also act as a button.\nInfo Pills, on the other hand, have their own set of props mostly for customization purpose."}),"\n",(0,t.jsx)(s.h4,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{style:{textAlign:"left"},children:"Parameter"}),(0,t.jsx)(s.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)(s.code,{children:"props"})}),(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)(s.a,{href:"/design-system/design-system-core/Pill#pillprops",children:(0,t.jsx)(s.code,{children:"PillProps"})})})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsxs)(s.td,{style:{textAlign:"left"},children:[(0,t.jsx)(s.code,{children:"context"}),"?"]}),(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)(s.code,{children:"any"})})]})]})]}),"\n",(0,t.jsx)(s.h4,{id:"returns",children:"Returns"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.code,{children:"ReactNode"})}),"\n",(0,t.jsx)(s.h4,{id:"example",children:"Example"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-tsx",children:"// Example of an action pill\n   <Pill\n       label={'This is a pill'}\n       active={true}\n       icon={<XMarkIcon />}\n       iconDirection=\"right\"\n       onPillClick={clickHandler}\n       type=\"action\"\n     />\n  // Example of an info pill\n     <Pill\n       type='info'\n       background='blue'\n       borderColor='success'\n       customStyle='w-20'\n     />\n"})}),"\n",(0,t.jsx)(s.h4,{id:"source",children:"Source"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.a,{href:"https://github.com/AKASHAorg/akasha-core/blob/275473bf46291dc2bd7bddcbf07c1e7716bba3a5/libs/design-system-core/src/components/Pill/index.tsx#L54",children:"libs/design-system-core/src/components/Pill/index.tsx:54"})}),"\n",(0,t.jsx)(s.h2,{id:"props",children:"Props"}),"\n",(0,t.jsx)(s.h3,{id:"pillprops",children:"PillProps"}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"PillProps"}),": ",(0,t.jsx)(s.code,{children:"ActionPillProps"})," & ",(0,t.jsx)(s.code,{children:"object"})," | ",(0,t.jsx)(s.code,{children:"object"})]}),"\n"]}),"\n",(0,t.jsx)(s.h4,{id:"source-1",children:"Source"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.a,{href:"https://github.com/AKASHAorg/akasha-core/blob/275473bf46291dc2bd7bddcbf07c1e7716bba3a5/libs/design-system-core/src/components/Pill/index.tsx#L17",children:"libs/design-system-core/src/components/Pill/index.tsx:17"})})]})}function h(e={}){const{wrapper:s}={...(0,l.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>r});var t=n(96540);const l={},i=t.createContext(l);function o(e){const s=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:o(e.components),t.createElement(i.Provider,{value:s},e.children)}}}]);