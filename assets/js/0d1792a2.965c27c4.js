"use strict";(self.webpackChunkakasha_docs=self.webpackChunkakasha_docs||[]).push([[67539],{57635:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var s=n(74848),a=n(28453);const i={sidebar_position:3,sidebar_label:"Create a Plugin"},r="Create a plugin",o={id:"extension-tutorials/create-a-plugin",title:"Create a plugin",description:"Let's create a simple plugin that will provide a few methods to store some data into localstorage.",source:"@site/docs/extension-tutorials/create-a-plugin.md",sourceDirName:"extension-tutorials",slug:"/extension-tutorials/create-a-plugin",permalink:"/extension-tutorials/create-a-plugin",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedAt:1719832236e3,sidebarPosition:3,frontMatter:{sidebar_position:3,sidebar_label:"Create a Plugin"},sidebar:"defaultSidebar",previous:{title:"Create a Widget",permalink:"/extension-tutorials/create-a-widget"},next:{title:"Create ContentBlocks",permalink:"/extension-tutorials/create-content-blocks"}},l={},c=[];function d(e){const t={a:"a",code:"code",h1:"h1",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"create-a-plugin",children:"Create a plugin"}),"\n",(0,s.jsx)(t.p,{children:"Let's create a simple plugin that will provide a few methods to store some data into localstorage."}),"\n",(0,s.jsxs)(t.p,{children:["Make sure you already followed the ",(0,s.jsx)(t.a,{href:"/",children:"extension bootstrapping"})," steps and after you have the whole setups done, proceed by creating a ",(0,s.jsx)(t.code,{children:"src"})," folder in the root of you plugin."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"mkdir src"})}),"\n",(0,s.jsxs)(t.p,{children:["Finally let's create the entry file in the ",(0,s.jsx)(t.code,{children:"src"})]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"touch src/index.ts"})}),"\n",(0,s.jsxs)(t.p,{children:["Let's add the registration function in the ",(0,s.jsx)(t.code,{children:"index.ts"})," file and create the required methods."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",metastring:'title="registration function"',children:"export const getPlugin = (options) => {\n  return {\n    storage: {\n      saveData<T>(key: string, data: T): void {\n        try {\n          const stringified = JSON.stringify(data);\n          localStorage.setItem(key, stringified);\n          return true;\n        } catch (err) {\n          options.logger.log('Failed to save data to storage');\n          return false;\n        }\n      }\n      getData<T>(key: string): T {\n        const dataString = localStorage.getItem(key);\n        return JSON.parse(dataString);\n      }\n      removeData(key: string) {\n        localStorage.removeItem(key);\n      }\n    }\n  }\n}\n"})}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"getPlugin"})," - the registration function for plugins\n",(0,s.jsx)(t.code,{children:"storage"})," - just a namespace we've chosen to allow extending this plugin with other namespaces in the future. This is just a preference and it also works without it. However as soon as other extensions is using it it's hard to change without introducing breaking changes. It can also be used as a versioning namespace, for example ",(0,s.jsx)(t.code,{children:"v1"}),"."]}),"\n",(0,s.jsx)(t.p,{children:"Once installed, this plugin will be available to all other installed extensions using:"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"props.plugins['my-awesome-plugin'].storage.saveData('test', {a: 1})"})})]})}function u(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>o});var s=n(96540);const a={},i=s.createContext(a);function r(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);