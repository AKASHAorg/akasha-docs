"use strict";(self.webpackChunkakasha_docs=self.webpackChunkakasha_docs||[]).push([[44567],{35168:(e,a,s)=>{s.r(a),s.d(a,{Badge:()=>u,Bullet:()=>d,Details:()=>h,SpecifiedBy:()=>p,assets:()=>o,contentTitle:()=>c,default:()=>x,frontMatter:()=>l,metadata:()=>i,toc:()=>f});var n=s(74848),t=s(28453),r=s(96540);const l={id:"akasha-app-release-interface-count",title:"akashaAppReleaseInterfaceCount"},c=void 0,i={id:"composedb-models/api/queries/akasha-app-release-interface-count",title:"akashaAppReleaseInterfaceCount",description:"No description",source:"@site/docs/composedb-models/api/queries/akasha-app-release-interface-count.mdx",sourceDirName:"composedb-models/api/queries",slug:"/composedb-models/api/queries/akasha-app-release-interface-count",permalink:"/composedb-models/api/queries/akasha-app-release-interface-count",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"akasha-app-release-interface-count",title:"akashaAppReleaseInterfaceCount"},sidebar:"defaultSidebar",previous:{title:"akashaAppReleaseIndex",permalink:"/composedb-models/api/queries/akasha-app-release-index"},next:{title:"akashaAppReleaseInterfaceIndex",permalink:"/composedb-models/api/queries/akasha-app-release-interface-index"}},o={},d=()=>{const e={span:"span",...(0,t.R)()};return(0,n.jsx)(n.Fragment,{children:(0,n.jsx)(e.span,{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"},children:"\xa0\u25cf\xa0"})})},p=e=>{const a={a:"a",...(0,t.R)()};return(0,n.jsxs)(n.Fragment,{children:["Specification",(0,n.jsx)(a.a,{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url,children:"\u2398"})]})},u=e=>{const a={span:"span",...(0,t.R)()};return(0,n.jsx)(n.Fragment,{children:(0,n.jsx)(a.span,{className:e.class,children:e.text})})},h=({dataOpen:e,dataClose:a,children:s,startOpen:l=!1})=>{const c={details:"details",summary:"summary",...(0,t.R)()},[i,o]=(0,r.useState)(l);return(0,n.jsxs)(c.details,{...i?{open:!0}:{},className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"},children:[(0,n.jsx)(c.summary,{onClick:e=>{e.preventDefault(),o((e=>!e))},style:{listStyle:"none"},children:i?e:a}),i&&s]})},f=[{value:"Arguments",id:"arguments",level:3},{value:'<code>akashaAppReleaseInterfaceCount.<b>filters</b></code><Bullet></Bullet><code>AkashaAppReleaseInterfaceFiltersInput</code> <Badge class="badge badge--secondary"></Badge>',id:"akashaappreleaseinterfacecountfiltersakashaappreleaseinterfacefiltersinput-",level:4},{value:"Type",id:"type",level:3},{value:'<code>Int</code> <Badge class="badge badge--secondary"></Badge>',id:"int-",level:4}];function m(e){const a={a:"a",blockquote:"blockquote",code:"code",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.p,{children:"No description"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-graphql",children:"akashaAppReleaseInterfaceCount(\n  filters: AkashaAppReleaseInterfaceFiltersInput\n): Int!\n"})}),"\n",(0,n.jsx)(a.h3,{id:"arguments",children:"Arguments"}),"\n",(0,n.jsxs)(a.h4,{id:"akashaappreleaseinterfacecountfiltersakashaappreleaseinterfacefiltersinput-",children:[(0,n.jsx)(a.a,{href:"#",children:(0,n.jsxs)("code",{style:{fontWeight:"normal"},children:["akashaAppReleaseInterfaceCount.",(0,n.jsx)("b",{children:"filters"})]})}),(0,n.jsx)(d,{}),(0,n.jsx)(a.a,{href:"/composedb-models/types/inputs/akasha-app-release-interface-filters-input",children:(0,n.jsx)(a.code,{children:"AkashaAppReleaseInterfaceFiltersInput"})})," ",(0,n.jsx)(u,{class:"badge badge--secondary",text:"input"})]}),"\n",(0,n.jsx)(a.blockquote,{children:"\n"}),"\n",(0,n.jsx)(a.h3,{id:"type",children:"Type"}),"\n",(0,n.jsxs)(a.h4,{id:"int-",children:[(0,n.jsx)(a.a,{href:"/composedb-models/types/scalars/int",children:(0,n.jsx)(a.code,{children:"Int"})})," ",(0,n.jsx)(u,{class:"badge badge--secondary",text:"scalar"})]}),"\n",(0,n.jsxs)(a.blockquote,{children:["\n",(0,n.jsxs)(a.p,{children:["The ",(0,n.jsx)(a.code,{children:"Int"})," scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."]}),"\n"]})]})}function x(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(m,{...e})}):m(e)}},28453:(e,a,s)=>{s.d(a,{R:()=>l,x:()=>c});var n=s(96540);const t={},r=n.createContext(t);function l(e){const a=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function c(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),n.createElement(r.Provider,{value:a},e.children)}}}]);