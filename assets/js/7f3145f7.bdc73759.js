"use strict";(self.webpackChunkakasha_docs=self.webpackChunkakasha_docs||[]).push([[70200],{49546:(e,a,n)=>{n.r(a),n.d(a,{Badge:()=>f,Bullet:()=>d,Details:()=>u,SpecifiedBy:()=>p,assets:()=>c,contentTitle:()=>o,default:()=>x,frontMatter:()=>i,metadata:()=>l,toc:()=>h});var t=n(74848),s=n(28453),r=n(96540);const i={id:"akasha-profile-interface-count",title:"akashaProfileInterfaceCount"},o=void 0,l={id:"composedb-models/api/queries/akasha-profile-interface-count",title:"akashaProfileInterfaceCount",description:"No description",source:"@site/docs/composedb-models/api/queries/akasha-profile-interface-count.mdx",sourceDirName:"composedb-models/api/queries",slug:"/composedb-models/api/queries/akasha-profile-interface-count",permalink:"/composedb-models/api/queries/akasha-profile-interface-count",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"akasha-profile-interface-count",title:"akashaProfileInterfaceCount"},sidebar:"defaultSidebar",previous:{title:"akashaProfileInterestsInterfaceIndex",permalink:"/composedb-models/api/queries/akasha-profile-interests-interface-index"},next:{title:"akashaProfileInterfaceIndex",permalink:"/composedb-models/api/queries/akasha-profile-interface-index"}},c={},d=()=>{const e={span:"span",...(0,s.R)()};return(0,t.jsx)(t.Fragment,{children:(0,t.jsx)(e.span,{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"},children:"\xa0\u25cf\xa0"})})},p=e=>{const a={a:"a",...(0,s.R)()};return(0,t.jsxs)(t.Fragment,{children:["Specification",(0,t.jsx)(a.a,{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url,children:"\u2398"})]})},f=e=>{const a={span:"span",...(0,s.R)()};return(0,t.jsx)(t.Fragment,{children:(0,t.jsx)(a.span,{className:e.class,children:e.text})})},u=({dataOpen:e,dataClose:a,children:n,startOpen:i=!1})=>{const o={details:"details",summary:"summary",...(0,s.R)()},[l,c]=(0,r.useState)(i);return(0,t.jsxs)(o.details,{...l?{open:!0}:{},className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"},children:[(0,t.jsx)(o.summary,{onClick:e=>{e.preventDefault(),c((e=>!e))},style:{listStyle:"none"},children:l?e:a}),l&&n]})},h=[{value:"Arguments",id:"arguments",level:3},{value:'<code>akashaProfileInterfaceCount.<b>filters</b></code><Bullet></Bullet><code>AkashaProfileInterfaceFiltersInput</code> <Badge class="badge badge--secondary"></Badge>',id:"akashaprofileinterfacecountfiltersakashaprofileinterfacefiltersinput-",level:4},{value:"Type",id:"type",level:3},{value:'<code>Int</code> <Badge class="badge badge--secondary"></Badge>',id:"int-",level:4}];function m(e){const a={a:"a",blockquote:"blockquote",code:"code",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.p,{children:"No description"}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-graphql",children:"akashaProfileInterfaceCount(\n  filters: AkashaProfileInterfaceFiltersInput\n): Int!\n"})}),"\n",(0,t.jsx)(a.h3,{id:"arguments",children:"Arguments"}),"\n",(0,t.jsxs)(a.h4,{id:"akashaprofileinterfacecountfiltersakashaprofileinterfacefiltersinput-",children:[(0,t.jsx)(a.a,{href:"#",children:(0,t.jsxs)("code",{style:{fontWeight:"normal"},children:["akashaProfileInterfaceCount.",(0,t.jsx)("b",{children:"filters"})]})}),(0,t.jsx)(d,{}),(0,t.jsx)(a.a,{href:"/composedb-models/types/inputs/akasha-profile-interface-filters-input",children:(0,t.jsx)(a.code,{children:"AkashaProfileInterfaceFiltersInput"})})," ",(0,t.jsx)(f,{class:"badge badge--secondary",text:"input"})]}),"\n",(0,t.jsx)(a.blockquote,{children:"\n"}),"\n",(0,t.jsx)(a.h3,{id:"type",children:"Type"}),"\n",(0,t.jsxs)(a.h4,{id:"int-",children:[(0,t.jsx)(a.a,{href:"/composedb-models/types/scalars/int",children:(0,t.jsx)(a.code,{children:"Int"})})," ",(0,t.jsx)(f,{class:"badge badge--secondary",text:"scalar"})]}),"\n",(0,t.jsxs)(a.blockquote,{children:["\n",(0,t.jsxs)(a.p,{children:["The ",(0,t.jsx)(a.code,{children:"Int"})," scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."]}),"\n"]})]})}function x(e={}){const{wrapper:a}={...(0,s.R)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(m,{...e})}):m(e)}},28453:(e,a,n)=>{n.d(a,{R:()=>i,x:()=>o});var t=n(96540);const s={},r=t.createContext(s);function i(e){const a=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(r.Provider,{value:a},e.children)}}}]);