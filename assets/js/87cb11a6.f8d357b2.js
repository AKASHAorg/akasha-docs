"use strict";(self.webpackChunkakasha_docs=self.webpackChunkakasha_docs||[]).push([[75104],{78809:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var t=o(74848),s=o(28453);const r={sidebar_position:5,sidebar_label:"Create ExtensionPoints"},i="Create extension points",a={id:"extension-tutorials/create-extension-points",title:"Create extension points",description:"Extension-points are always provided by apps (or widgets) so you must first create an app",source:"@site/docs/extension-tutorials/create-extension-points.md",sourceDirName:"extension-tutorials",slug:"/extension-tutorials/create-extension-points",permalink:"/extension-tutorials/create-extension-points",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedAt:1719832236e3,sidebarPosition:5,frontMatter:{sidebar_position:5,sidebar_label:"Create ExtensionPoints"},sidebar:"defaultSidebar",previous:{title:"Create ContentBlocks",permalink:"/extension-tutorials/create-content-blocks"},next:{title:"Extension Publishing",permalink:"/extension-publishing/"}},c={},l=[{value:"Adding the extension-point config",id:"adding-the-extension-point-config",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h3:"h3",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"create-extension-points",children:"Create extension points"}),"\n",(0,t.jsxs)(n.p,{children:["Extension-points are always provided by apps (or widgets) so you must first ",(0,t.jsx)(n.a,{href:"/extension-tutorials/create-an-app",children:"create an app"}),"\n(or ",(0,t.jsx)(n.a,{href:"/extension-tutorials/create-a-widget",children:"create a widget"}),")."]}),"\n",(0,t.jsxs)(n.p,{children:["This tutorial asumes you have followed the ",(0,t.jsx)(n.code,{children:"create an app"})," tutorial."]}),"\n",(0,t.jsxs)(n.p,{children:["We will create a ",(0,t.jsx)(n.code,{children:"Bookmark"})," button which will be visible on the bottom of the beam card that will allow users to save the beam for later read.\nFor simplicity we will store the beam data into the localStorage."]}),"\n",(0,t.jsxs)(n.p,{children:["Make a new folder in the ",(0,t.jsx)(n.code,{children:"src/extensions/bookmark"})," of your previously created app."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'title="root folder of the app"',children:"mkdir -p src/extensions/bookmark\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Create a new file in ",(0,t.jsx)(n.code,{children:"src/extension/bookmark"})," named ",(0,t.jsx)(n.code,{children:"index.tsx"}),". This will be the entry file for this extension-point."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"touch src/extensions/bookmark/index.tsx\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This file will need to export the ",(0,t.jsx)(n.code,{children:"single-spa-react"})," lifecycle functions."]}),"\n",(0,t.jsx)(n.p,{children:"Here is an example of a super simple bookmark extension-point."}),"\n",(0,t.jsx)(n.admonition,{type:"caution",children:(0,t.jsx)(n.p,{children:"Untested code - if you encounter any errors feel free to open an issue or a pr with a fix ;)"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",metastring:'title="src/extensions/bookmark/index.tsx"',children:"import React from 'react';\nimport ReactDOMClient from 'react-dom/client';\nimport singleSpaReact from 'single-spa-react';\nimport { useRootComponentProps, withProviders } from '@akashaorg/ui-awf-hooks';\nimport { IRootExtensionProps } from '@akashaorg/typings/lib/ui';\nimport Button from '@akashaorg/design-system-core/lib/Button';\nimport {BookmarkIcon, BookmarkSlashIcon} from '@akashaorg/design-system-core/lib/components/Icon/hero-icons-outline'\n\n// we will store the data under this key\nconst BOOKMARK_STORAGE_KEY = '@myAppName/bookmarks';\n\nconst getBookmarkList = () => {\n  const bookmarks = localstorage.getItem(BOOKMARK_STORAGE_KEY);\n  if (bookmarks) {\n    return JSON.parse(bookmarks);\n  }\n  return [];\n}\n\nconst BookmarkExtension: React.FC<IRootExtensionProps> = (props: IRootExtensionProps) => {\n  // extensionData the props that are pased down using the <Extension /> component are under the extensionData key;\n  const {extensionData} = props;\n  // asuming the beamID is passed down\n  // this is done by passing a beamID props to the <Extension /> component\n  const { beamID } = extensionData;\n\n  const [isBookmarked, setIsBookmarked] = React.useState(() => getBookmarkList().includes(beamID));\n\n  const saveBookmark = () => {\n    setIsBookmarked(true);\n    localStorage.setItem(BOOKMARK_STORAGE_KEY, JSON.stringify([...getBookmarkList(), beamID]));\n  }\n  const removeBookmark = () => {\n    setIsBookmarked(false);\n    localStorage.getItem(BOOKMARK_STORAGE_KEY, JSON.stringify(getBookmarkList().filter(bookmarkID => bookmarkID !== beamID)));\n  }\n  const handleClick = () => {\n    if (isBookmarked) {\n      return removeBookmark();\n    }\n    saveBookmark();\n  }\n\n  return <Button icon={} label=\"Bookmark\" onClick={handleClick} size=\"xs\" variant=\"primary\" />\n}\n\nexport const {bootstrap, mount, unmount} = singleSpaReact({\n  React,\n  ReactDOMClient,\n  // withProviders is a handy HOC that will setup common React context providers\n  // used by almost all entities.\n  // https://github.com/AKASHAorg/akasha-core/blob/next/libs/hooks/src/utils/provider-hoc.tsx\n  rootComponent: withProviders(BookmarkExtension),\n  errorBoundary: (err, errorInfo, props: IRootExtensionProps) => {\n    if (props.logger) {\n      props.logger.error(`${JSON.stringify(errorInfo)}, ${errorInfo}`);\n    }\n    return <div>Error</div>\n  }\n});\n\n"})}),"\n",(0,t.jsx)(n.h3,{id:"adding-the-extension-point-config",children:"Adding the extension-point config"}),"\n",(0,t.jsxs)(n.p,{children:["Let's open our app's entry file (",(0,t.jsx)(n.code,{children:"src/index.ts"}),") and add the following to the config."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",metastring:'title="apps\'s index.ts"',children:"\nexport const register = () => {\n  return {\n    // ... the other options\n    extensions: [\n      {\n        loadingFn: () => import('./extensions/bookmarks/index'),\n        mountsIn: 'beam-card/card-footer-extension'\n      }\n    ]\n  }\n}\n\n"})}),"\n",(0,t.jsx)(n.p,{children:"Now, if you rebuild the project and navigate to the Antenna app you will see the extension-point rendered and functional in every beam card."}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.p,{children:"If you don't see it rendered it might be because the extension-point's name chaged or no longer there.\nPlease open an issue in AKASHA Core's repo referencing this note."})}),"\n",(0,t.jsx)(n.p,{children:"Congratulations! You have just created an extension-point using AKASHA Core!"})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>a});var t=o(96540);const s={},r=t.createContext(s);function i(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);