"use strict";(self.webpackChunkakasha_docs=self.webpackChunkakasha_docs||[]).push([[17051],{95077:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>d});var t=o(74848),r=o(28453);const s={title:"Glossary",sidebar_position:8},a="Glossary",i={id:"glossary",title:"Glossary",description:"Antenna",source:"@site/docs/glossary.md",sourceDirName:".",slug:"/glossary",permalink:"/glossary",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedAt:1718712694e3,sidebarPosition:8,frontMatter:{title:"Glossary",sidebar_position:8},sidebar:"defaultSidebar",previous:{title:"Workspace Structure",permalink:"/workspace-structure"},next:{title:"Extensions",permalink:"/extensions/"}},l={},d=[{value:"Antenna",id:"antenna",level:3},{value:"Beam",id:"beam",level:3},{value:"Profile",id:"profile",level:3},{value:"Reflection",id:"reflection",level:3},{value:"Tag",id:"tag",level:3},{value:"World",id:"world",level:3}];function c(e){const n={a:"a",code:"code",h1:"h1",h3:"h3",p:"p",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"glossary",children:"Glossary"}),"\n",(0,t.jsx)(n.h3,{id:"antenna",children:"Antenna"}),"\n",(0,t.jsx)(n.p,{children:"An Antenna is a feed of beams sorted in chronological order and can be tailored to user's interests."}),"\n",(0,t.jsx)(n.h3,{id:"beam",children:"Beam"}),"\n",(0,t.jsx)(n.p,{children:"A Beam is the equivalent of a regular post (in a traditional social networking context) however the content of the beam is composed of one or more content blocks which are provided by apps."}),"\n",(0,t.jsx)(n.h3,{id:"profile",children:"Profile"}),"\n",(0,t.jsx)(n.p,{children:"A Profile depicts a user's persona in a given world. It holds their avatar, basic info and list of beams, interests ad connections with other users in a world."}),"\n",(0,t.jsx)(n.h3,{id:"reflection",children:"Reflection"}),"\n",(0,t.jsx)(n.p,{children:"A Reflection is a comment made under a beam or another reflection."}),"\n",(0,t.jsx)(n.h3,{id:"tag",children:"Tag"}),"\n",(0,t.jsx)(n.p,{children:"A Tag is a word that uniquely links to a group of posts relating to a specific interest or topic. Beams can be filtered using tags."}),"\n",(0,t.jsx)(n.h3,{id:"world",children:"World"}),"\n",(0,t.jsxs)(n.p,{children:["A world is a web3-powered modular social platform. Every world can have a predefined (installed by default) collection of apps and widgets. The config file of a specific world is defined under the ",(0,t.jsx)(n.a,{href:"https://github.com/AKASHAorg/akasha-core/tree/next/worlds/akasha.world",children:"worlds"})," directory. For example, config file for ",(0,t.jsx)(n.code,{children:"Akasha World"})," can be found ",(0,t.jsx)(n.a,{href:"https://github.com/AKASHAorg/akasha-core/blob/next/worlds/akasha.world/src/index.ts",children:"here"})]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>a,x:()=>i});var t=o(96540);const r={},s=t.createContext(r);function a(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);