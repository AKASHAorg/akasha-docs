"use strict";(self.webpackChunkakasha_docs=self.webpackChunkakasha_docs||[]).push([[2744],{85343:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var t=i(74848),o=i(28453);const s={sidebar_position:5,sidebar_label:"Loading Function"},r="Loading Function",a={id:"extensions/loading_function",title:"Loading Function",description:"Please also read the overview of the bootstrapping mounting and unmounting lifecycles.",source:"@site/docs/extensions/loading_function.md",sourceDirName:"extensions",slug:"/extensions/loading_function",permalink:"/extensions/loading_function",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedAt:1719832236e3,sidebarPosition:5,frontMatter:{sidebar_position:5,sidebar_label:"Loading Function"},sidebar:"defaultSidebar",previous:{title:"Layout Widget",permalink:"/extensions/layout_widget"},next:{title:"Extension Points",permalink:"/extensions/extension_points"}},c={},l=[];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"loading-function",children:"Loading Function"}),"\n",(0,t.jsxs)(n.p,{children:["Please also read the overview of the ",(0,t.jsx)(n.a,{href:"/extensions/#the-bootstrapping-mounting-and-unmounting-part",children:"bootstrapping mounting and unmounting"})," lifecycles."]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"loadingFn"})," is the primary function for mounting the view. It is required to be defined for each of the AKASHA Core's micro-frontend type:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"application"}),"\n",(0,t.jsx)(n.li,{children:"widget"}),"\n",(0,t.jsx)(n.li,{children:"extension-point"}),"\n",(0,t.jsx)(n.li,{children:"content-block"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Single-spa library (which is implemented under the hood) handles these micro-frontends through some lifecycle methods:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"bootstrap"}),"\n",(0,t.jsx)(n.li,{children:"mount"}),"\n",(0,t.jsx)(n.li,{children:"unmount"}),"\n",(0,t.jsx)(n.li,{children:"update (optional)"}),"\n"]}),"\n",(0,t.jsxs)(n.admonition,{type:"info",children:[(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"update"})," lifecycle method is not currently used in this project."]}),(0,t.jsx)(n.p,{children:"The loading function should return a Promise which when resolved, returns these lifecycle hooks."}),(0,t.jsxs)(n.p,{children:["For React, and other popular ui libraries, single-spa provides adapter libraries to automatically call the rendering functions of these ui libs. For React, it's called ",(0,t.jsx)(n.code,{children:"single-spa-react"}),". If you are interested to dive deeper, you can check their ",(0,t.jsx)(n.a,{href:"https://single-spa.js.org/docs/getting-started-overview",children:"docs"})]})]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>a});var t=i(96540);const o={},s=t.createContext(o);function r(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);